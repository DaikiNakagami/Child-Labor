//
//  ExploitationViewController.swift
//  Child Labor
//
//  Created by E J Kalafarski on 4/30/15.
//  Copyright (c) 2015 E J Kalafarski. All rights reserved.
//

import UIKit

class ExploitationTableViewController: UITableViewController, NSXMLParserDelegate, UICollectionViewDataSource, UICollectionViewDelegate {
    
    var parser = NSXMLParser()
    var countries = NSMutableArray()
    var countryGoods = NSMutableArray()
    var currentCountry = ""
    var goods = NSMutableArray()
    var element = NSString()
    var buffer = NSMutableString()
    
    var state = 0

    override func viewDidLoad() {
        super.viewDidLoad()

        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        // self.navigationItem.rightBarButtonItem = self.editButtonItem()
        
        self.navigationController?.toolbar.frame = CGRectMake(0, 571, 375, 96)
        
        // Begin parsing goods by country
        var urlpath = NSBundle.mainBundle().pathForResource("all_goods_by_country", ofType: "xml")
        parser = NSXMLParser(contentsOfURL: NSURL.fileURLWithPath(urlpath!))!
        parser.delegate = self
        parser.parse()
    }
    
    func parser(parser: NSXMLParser, didStartElement elementName: String, namespaceURI: String?, qualifiedName qName: String?, attributes attributeDict: [NSObject : AnyObject]) {
        element = elementName
        
        buffer = NSMutableString.alloc()
        buffer = ""
    }
    
    func parser(parser: NSXMLParser, foundCharacters string: String?) {
        buffer.appendString(string!)
    }
    
    func parser(parser: NSXMLParser, didEndElement elementName: String, namespaceURI: String?, qualifiedName qName: String?) {
        if elementName == "Country_Name" {
            goods = NSMutableArray()
            currentCountry = buffer as String
            countries.addObject(buffer)
        }
        
        if elementName == "Good_Name" {
            goods.addObject(buffer)
        }
        
        if elementName == "Country" {
            countryGoods.addObject(goods)
        }
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    // MARK: - Table view data source

    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
        // #warning Potentially incomplete method implementation.
        // Return the number of sections.
        return 1
    }

    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete method implementation.
        // Return the number of rows in the section.
        return countries.count
    }

    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCellWithIdentifier("Country", forIndexPath: indexPath) as! UITableViewCell

        // Configure the cell...
        var theLabel : UILabel? = cell.viewWithTag(101) as? UILabel
        var theCollectionView : UICollectionView? = cell.viewWithTag(102) as? UICollectionView
        
        // Set collection view tag to the row index, to pass the index of the good into the collection view
        theCollectionView?.tag = indexPath.row
        
        // Set the country name
        theLabel?.text = (countries.objectAtIndex(indexPath.row) as! String).stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())

        return cell
    }

    /*
    // Override to support conditional editing of the table view.
    override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
        // Return NO if you do not want the specified item to be editable.
        return true
    }
    */

    /*
    // Override to support editing the table view.
    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
        if editingStyle == .Delete {
            // Delete the row from the data source
            tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
        } else if editingStyle == .Insert {
            // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
        }    
    }
    */

    /*
    // Override to support rearranging the table view.
    override func tableView(tableView: UITableView, moveRowAtIndexPath fromIndexPath: NSIndexPath, toIndexPath: NSIndexPath) {

    }
    */

    /*
    // Override to support conditional rearranging of the table view.
    override func tableView(tableView: UITableView, canMoveRowAtIndexPath indexPath: NSIndexPath) -> Bool {
        // Return NO if you do not want the item to be re-orderable.
        return true
    }
    */
    
    func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return (countryGoods[collectionView.tag] as! NSArray).count
    }
    
    func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCellWithReuseIdentifier("Good", forIndexPath: indexPath) as! UICollectionViewCell
        
        //
        var goodButton : UIButton? = cell.viewWithTag(201) as? UIButton
        
        //
        var cl : UIImageView? = cell.viewWithTag(202) as? UIImageView
        var fl : UIImageView? = cell.viewWithTag(203) as? UIImageView
        
        // Parse out the name of the good
        var goodName = (((countryGoods[collectionView.tag] as! NSArray)[indexPath.row]) as! String).stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())
        
//        switch indexPath.row % 11 {
//        case 0:
//            goodName = "Alcoholic Beverages"
//        case 1:
//            goodName = "Bananas"
//        case 2:
//            goodName = "Baked Goods"
//        case 3:
//            goodName = "Beans (green, soy, yellow)"
//        case 4:
//            goodName = "Bricks"
//        case 5:
//            goodName = "Cattle"
//        case 6:
//            goodName = "Cotton"
//        case 7:
//            goodName = "Citrus Fruits"
//        case 8:
//            goodName = "Diamonds"
//        case 9:
//            goodName = "Sugarcane"
//        case 10:
//            goodName = "Timber"
//        default:
//            goodName = "Alcoholic Beverages"
//        }
        
        goodButton!.setImage(UIImage(named:goodName + "-44")?.imageWithRenderingMode(.AlwaysTemplate), forState: .Normal)
        
        // Hide 
        switch Int(arc4random_uniform(4)) {
        case 0:
            cl?.hidden = false
            fl?.hidden = true
        case 1:
            cl?.hidden = true
            fl?.hidden = false
        case 2:
            cl?.hidden = false
            fl?.hidden = false
        case 3:
            cl?.hidden = false
            cl?.image = UIImage(named: "hand3-black")
            fl?.hidden = false
        default:
            break
        }
        
        return cell
    }

    @IBAction func filterChanged(sender: AnyObject) {
        state = sender.selectedSegmentIndex
        self.tableView.reloadData()
    }
    
    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        if segue.identifier == "goodSelectedFromExploitationTable" {
            var svc = segue.destinationViewController as! GoodViewController
            svc.goodName = "Bananas" as String
        }
    }

}
